@page "{currentPage:int?}"
@model WebRazor.Pages.Admin.Order.IndexModel
@{
	ViewData["PageTitle"] = "Order List";
	var pagingModel = new WebRazor.Helpers.PagingModel()
			{
				currentPage = Model.currentPage,
				countPages = Model.totalPages,
				generateUrl = (int? currentPage) => (Model.dateFrom == default(DateTime) || Model.dateTo == default(DateTime)) ?
					Url.Page("/Admin/Order/Index", new { currentPage = currentPage })
						: Url.Page("/Admin/Order/Index", new { currentPage = currentPage, dateFrom = Model.dateFrom, dateTo = Model.dateTo })

			};
	var dateFrom = Model.dateFrom;
	var dateTo = Model.dateTo;

	ViewData["msg"] = TempData["msg"];
}

<style>
	.order-link {
		color: #007bff; /* Link color */
		text-decoration: none; /* Remove underline */
		font-weight: bold; /* Make the text bold */
	}

		/* Style for the link on hover */
		.order-link:hover {
			text-decoration: underline; /* Add underline on hover */
		}
</style>
<div class="path-admin">ORDERS LIST</div>
<div class="content-main">
	<div id="content-main-dashboard">
		<div id="order-title" style="display: flex;">
			<div>	
				<b>Filter by Order date:</b>
				<form method="get" asp-page-handler="Filter">
					<div>
						<label for="dateFrom">From:</label>
						<input asp-for="dateFrom" type="date" id="dateFrom" onchange="dateChange()" />
					</div>
					<div>
						<label for="dateTo">To:</label>
						<input asp-for="dateTo" type="date" id="dateTo" onchange="dateChange()" />
					</div>
					<div class="msg-error">@ViewData["msg"]</div>
					<button type="submit">Filter</button>
				</form>
				

			</div>
			<div style="margin-left: 50%; padding-top: 4%;">
				<a id="exportLink" href="~/Admin/Export?dataTable=order&dateFrom=@dateFrom&dateTo=@dateTo">Export order</a>
			</div>
		</div>

		<div id="order-table">
			@if (Model.orderList == null || Model.orderList.Count < 1)
			{
				<div style="margin: 1% 2%;" class="msg-error">Not found order(s)!</div>
			}
			else
			{
				<table id="orders">
					<tr>
						<th>OrderID</th>
						<th>OrderDate</th>
						<th>RequiredDate</th>
						<th>ShippedDate</th>
						<th>Employee</th>
						<th>Customer</th>
						<th>Freight($)</th>
						<th>Status</th>
					</tr>
					@foreach (var o in Model.orderList)
					{
						<tr>
							<td>
								<a href="~/Admin/Order/OrderDetails?id=@o.OrderId" class="order-link">
									@o.OrderId
								</a>
							</td>
							<td>@o.OrderDate.Value.ToString("dd-MM-yyyy")</td>
							<td>@(o.RequiredDate == null ? "" : o.RequiredDate.Value.ToString("dd-MM-yyyy"))</td>
							<td>@(o.ShippedDate == null ? "" : o.ShippedDate.Value.ToString("dd-MM-yyyy"))</td>
							<td>@(o.EmployeeId == null ? "" : o.Employee.FirstName + " " + o.Employee.LastName)</td>
							<td>@o.Customer.ContactName</td>
							<td>@o.Freight</td>
							@if(o.ShippedDate == null)
							{
								<td style="color: green;">Completed</td>
							}
							else
							{
								<td style="color: red;">Pending</td>
							}
						</tr>
					}
				</table>
			}
		</div>
		<div id="paging">
			<div id="paging">
				<partial name="_Paging" model="@pagingModel" />
			</div>
		</div>
	</div>
</div>

<script>
	function dateChange() {
		var dFrom = document.getElementById("dateFrom").value;
		var dTo = document.getElementById("dateTo").value;
		var link = document.getElementById("exportLink");
		link.href = "Export?dataTable=order&dateFrom=" + dFrom + "&dateTo=" + dTo;
		console.log(link.href);
	}

		function toggleSort() {
			var sortDirection = document.getElementById("sortDirection");

			// Toggle giá trị của input hidden giữa "asc" và "desc"
			sortDirection.value = (sortDirection.value === "asc") ? "desc" : "asc";

			// Bấm vào nút submit để gửi form
			document.querySelector('form[action*="Sort"]').submit();
		}


</script>

